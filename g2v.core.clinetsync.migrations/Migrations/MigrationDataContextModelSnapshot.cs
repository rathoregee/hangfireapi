// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using platform_role_core_func.Migrations;

namespace platform_role_core_func.Migrations.Migrations
{
    [DbContext(typeof(MigrationDataContext))]
    partial class MigrationDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Resource")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.PermissionMapping", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "TenantId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("PermissionMappings");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.RoleMapping", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "TenantId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMappings");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.Property<Guid>("PermissionsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uuid");

                    b.HasKey("PermissionsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermissionRole");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.ApplicationRole", b =>
                {
                    b.HasBaseType("Elements2.RbacService.Model.DbModel.Role");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationRole");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.TenantRole", b =>
                {
                    b.HasBaseType("Elements2.RbacService.Model.DbModel.Role");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.ToTable("TenantRole");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.Permission", b =>
                {
                    b.HasOne("Elements2.RbacService.Model.DbModel.Application", "Application")
                        .WithMany("Permissions")
                        .HasForeignKey("ApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.PermissionMapping", b =>
                {
                    b.HasOne("Elements2.RbacService.Model.DbModel.Permission", "Permission")
                        .WithMany("PermissionMappings")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.RoleMapping", b =>
                {
                    b.HasOne("Elements2.RbacService.Model.DbModel.Role", "Role")
                        .WithMany("RoleMappings")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.HasOne("Elements2.RbacService.Model.DbModel.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Elements2.RbacService.Model.DbModel.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.ApplicationRole", b =>
                {
                    b.HasOne("Elements2.RbacService.Model.DbModel.Application", "Application")
                        .WithMany("ApplicationRoles")
                        .HasForeignKey("ApplicationId");

                    b.HasOne("Elements2.RbacService.Model.DbModel.Role", null)
                        .WithOne()
                        .HasForeignKey("Elements2.RbacService.Model.DbModel.ApplicationRole", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.TenantRole", b =>
                {
                    b.HasOne("Elements2.RbacService.Model.DbModel.Role", null)
                        .WithOne()
                        .HasForeignKey("Elements2.RbacService.Model.DbModel.TenantRole", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.Application", b =>
                {
                    b.Navigation("ApplicationRoles");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.Permission", b =>
                {
                    b.Navigation("PermissionMappings");
                });

            modelBuilder.Entity("Elements2.RbacService.Model.DbModel.Role", b =>
                {
                    b.Navigation("RoleMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
